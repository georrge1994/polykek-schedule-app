plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "argument.twins.com.polykekschedule"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 40
        versionName "2.2.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    // That excludes module duplicates during gradle builds.
    configurations {
        androidTestImplementation { exclude group: 'io.mockk', module: 'mockk-agent-jvm' }
    }

    kotlinOptions {
        jvmTarget = "11"
        // Hide warnings.
        freeCompilerArgs += [
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-opt-in=kotlinx.coroutines.ObsoleteCoroutinesApi",
                "-opt-in=kotlinx.coroutines.FlowPreview"
        ]
    }

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    namespace 'argument.twins.com.polykekschedule'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "androidx.legacy:legacy-support-v4:$legacySupportV4"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"

    // Ktx.
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleKtxVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKtxVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"

    // Material design.
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    
    // Dagger.
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt("org.jetbrains.kotlinx:kotlinx-metadata-jvm:$daggerSupportedKotlinMetaDataVersion")

    // Room db.
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"

    // Retrofit.
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version"

    // Navigation.
    implementation("com.github.terrakok:cicerone:$ciceroneVersion")

    // Other helpful libs.
    implementation "com.codesgood:justifiedtextview:$justifiedtextviewVersion"
    implementation "com.github.kirich1409:viewbindingpropertydelegate-noreflection:$bindingDelegateVersion"
    implementation "androidx.core:core-splashscreen:$splashscreenVersion"
    implementation "com.intuit.sdp:sdp-android:$sdpAndSspVersion"
    implementation "com.intuit.ssp:ssp-android:$sdpAndSspVersion"
    implementation "com.google.android.play:core:$playCoreVersion"

    // Firebase.
    implementation platform("com.google.firebase:firebase-bom:$firebaseBom")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-database-ktx"
    implementation "com.google.firebase:firebase-crashlytics"
    implementation "com.google.firebase:firebase-messaging"

    // Yandex map.
    implementation "com.yandex.android:maps.mobile:$yandexMapKitVersion"

    // *************** JUnit tests libs *******************
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "io.mockk:mockk:$mokkVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    // Helper for other arch dependencies, including JUnit test rules that can be used with LiveData.
    testImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    // For retrofit api testing.
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
    testImplementation "org.json:json:$testJsonVersion"

    // *************** Android JUnit tests *******************
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "io.mockk:mockk-android:$mokkVersion"
    androidTestImplementation "androidx.work:work-testing:$workRuntimeKtxVersion"

    // ********************* Modules *************************
    // Core.
    implementation project(coreUiApiModule)
    implementation project(coreRoomApiModule)
    implementation project(coreRetrofitApiModule)
    implementation project(coreRetrofitImplModule)
    implementation project(scheduleControllerApiModule)
    implementation project(scheduleControllerImplModule)

    // Features.
    implementation project(featureWelcomeModule)
    implementation project(featureSchoolsModule)
    implementation project(featureGroupsModule)
    implementation project(featureMainModule)
    implementation project(featureScheduleModule)
    implementation project(featureNotesModule)
    implementation project(featureMapModule)
    implementation project(featureBuildingsModule)
    implementation project(featureProfessorsModule)
    implementation project(featureFaqModule)
    implementation project(featureFeedbackModule)

    // Shared modules.
    implementation project(commonModelsModule)
    implementation project(sharedCodeModule)
    implementation project(moduleInjectorModule)
    androidTestImplementation project(testSupportModule)
    testImplementation project(testSupportModule)
}